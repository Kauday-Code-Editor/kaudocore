# Create KaudoCore directory structure
param(
    [string]$RootPath = "KaudoCore"
)

$directories = @(
    ".github/workflows",
    ".github/ISSUE_TEMPLATE",
    "benchmarks/src/buffer",
    "benchmarks/src/syntax",
    "benchmarks/src/history",
    "benchmarks/src/integration",
    "benchmarks/data/sample_files",
    "benchmarks/scripts",
    "profiling/memory/heaptrack_configs",
    "profiling/memory/valgrind_suppressions",
    "profiling/cpu/perf_configs",
    "profiling/cpu/flamegraph_scripts",
    "profiling/results/memory_reports",
    "profiling/results/cpu_profiles",
    "src/core/buffer/rope",
    "src/core/buffer/piece_table",
    "src/core/buffer/content",
    "src/core/buffer/memory",
    "src/core/buffer/storage",
    "src/core/history/command",
    "src/core/history/stack",
    "src/core/history/snapshot",
    "src/core/history/memory",
    "src/core/history/recovery",
    "src/core/cursor/position",
    "src/core/cursor/selection",
    "src/core/cursor/movement",
    "src/core/cursor/state",
    "src/core/events/core",
    "src/core/events/dispatcher",
    "src/core/events/types",
    "src/core/events/subscription",
    "src/core/events/performance",
    "src/core/workspace",
    "src/core/api",
    "src/syntax/parser/core",
    "src/syntax/parser/grammar",
    "src/syntax/parser/engine",
    "src/syntax/parser/memory",
    "src/syntax/loader/file",
    "src/syntax/loader/cache",
    "src/syntax/loader/registry",
    "src/syntax/loader/preload",
    "src/syntax/highlighter/tokens",
    "src/syntax/highlighter/theme",
    "src/syntax/highlighter/renderer",
    "src/syntax/highlighter/incremental",
    "src/syntax/highlighter/memory",
    "src/syntax/tree/node",
    "src/syntax/tree/builder",
    "src/syntax/tree/visitor",
    "src/syntax/tree/query",
    "src/syntax/tree/memory",
    "src/syntax/analysis/structure",
    "src/syntax/analysis/semantic",
    "src/syntax/analysis/incremental",
    "src/syntax/formats/syntax_file",
    "src/syntax/formats/tmgrammar",
    "src/syntax/formats/tree_sitter",
    "src/utils/error",
    "src/utils/config",
    "src/utils/logging",
    "src/utils/encoding",
    "src/utils/paths",
    "src/utils/collections",
    "src/utils/memory",
    "src/utils/threading",
    "src/utils/time",
    "src/utils/io",
    "src/ffi",
    "tests/common",
    "tests/unit/core/buffer",
    "tests/unit/core/history",
    "tests/unit/core/cursor",
    "tests/unit/core/events",
    "tests/unit/core/workspace",
    "tests/unit/syntax/parser",
    "tests/unit/syntax/loader",
    "tests/unit/syntax/highlighter",
    "tests/unit/syntax/tree",
    "tests/unit/syntax/formats",
    "tests/unit/utils",
    "tests/integration",
    "tests/property",
    "tests/stress",
    "tests/fixtures/syntax",
    "tests/fixtures/themes",
    "tests/fixtures/sample_files/small",
    "tests/fixtures/sample_files/medium",
    "tests/fixtures/sample_files/large",
    "tests/fixtures/sample_files/edge_cases",
    "tests/fixtures/configs",
    "tests/fixtures/corrupted",
    "examples/basic_editor/src/ui",
    "examples/basic_editor/src/commands",
    "examples/syntax_explorer/src",
    "examples/syntax_explorer/sample_files",
    "examples/memory_benchmark/src",
    "examples/memory_benchmark/data",
    "examples/concurrent_editor/src",
    "examples/syntax_compiler/src",
    "examples/syntax_compiler/grammars",
    "examples/api_showcase/src",
    "docs/design",
    "docs/api",
    "docs/tutorials",
    "docs/specifications",
    "docs/internals",
    "docs/diagrams",
    "tools/memory_profiler/src",
    "tools/memory_profiler/templates",
    "tools/syntax_validator/src",
    "tools/syntax_validator/rules",
    "tools/benchmark_runner/src",
    "tools/benchmark_runner/configs",
    "tools/theme_compiler/src",
    "tools/theme_compiler/templates",
    "tools/api_generator/src",
    "tools/api_generator/templates",
    "scripts/ci",
    "config",
    "assets/syntax/builtin",
    "assets/syntax/community",
    "assets/syntax/experimental",
    "assets/themes/builtin",
    "assets/themes/community",
    "assets/themes/experimental",
    "assets/icons/file_types",
    "assets/icons/ui",
    "assets/schemas"
)

foreach ($dir in $directories) {
    $fullPath = Join-Path $RootPath $dir
    New-Item -ItemType Directory -Path $fullPath -Force | Out-Null
    New-Item -ItemType File -Path (Join-Path $fullPath ".gitkeep") -Force | Out-Null
}